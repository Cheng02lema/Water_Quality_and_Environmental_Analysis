% 创建数据矩阵（基于你提供的数据）
data = [
    15.9, 8.9, 7.94, 0.52, 0.49, 33.09, 0.98, 7.74, 0.130714286, 162.4535714, 1.763571429, 1.578928571;
    18.2, 7.19, 7.92, 0.6, 33.02, 64.4, 0.12, 4, 0.160714286, 216.3928571, 1.403571429, 1.900714286;
    12.9, 5.73, 8.32, 0.69, 0.95, 56.33, 21.1, 4.57, 0.162142857, 83.08892857, 1.865, 1.625;
    17.7, 6.92, 8.04, 0.46, 8.57, 43, 1.76, 12.95, 0.264642857, 19.43464286, 1.688214286, 2.321785714;
    11.6, 8.01, 8.01, 0.41, 5.07, 209.22, 1.52, 2.5, 0.644642857, 4586.0508, 0.3375, 2.5075;
    15.8, 6.04, 8.11, 0.54, 4.816, 118.76, 2.17, 4.1, 0.264642857, 60.20821429, 0.714285714, 0.615714286
];

% 变量名称
var_names = {'温度', 'DO', 'pH', 'COD', '石油烃', '无机氮', '叶绿素a', '磷酸盐', '营养指数EI', '浮游动物生物量', '浮游动物多样性', '浮游植物多样性指数'};

% 手动计算协方差矩阵
data_mean = mean(data);             % 计算数据的均值
data_centered = data - data_mean;   % 数据中心化
cov_matrix = cov(data_centered);    % 计算协方差矩阵

% 计算协方差矩阵的特征值和特征向量
[V, D] = eig(cov_matrix);

% 提取特征值 (对角线) 并按降序排列
[eigenvalues, idx] = sort(diag(D), 'descend');
V = V(:, idx); % 按特征值的降序排列特征向量

% 解释方差计算
explained_variance = eigenvalues / sum(eigenvalues);

% 将数据投影到主成分
pc_scores = data_centered * V; 

% 创建3D图，并绘制变量载荷向量
figure;
scatter3(V(:,1), V(:,2), V(:,3), 'filled'); % 绘制各个变量的载荷点
text(V(:,1), V(:,2), V(:,3), var_names, 'FontSize', 10, 'Color', 'r'); % 标注变量名称

% 设置坐标轴标签和解释方差
xlabel(['PC1 - 解释方差: ', num2str(explained_variance(1) * 100, '%.2f'), '%']);
ylabel(['PC2 - 解释方差: ', num2str(explained_variance(2) * 100, '%.2f'), '%']);
zlabel(['PC3 - 解释方差: ', num2str(explained_variance(3) * 100, '%.2f'), '%']);
title('PCA 3D 载荷图');

% 往下方投影到 PC1-PC2 平面
hold on;
for i = 1:length(V(:,1))
    plot3([V(i,1), V(i,1)], [V(i,2), V(i,2)], [V(i,3), 0], 'k--'); % 投影线到 PC1-PC2 平面
end

% 显示网格
grid on;
view(135, 30); % 设置视角
